case 1: commit
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=0;
insert into t1 values (1, 2);
select * from t1 where c1 = 1 for update;
c1	c2
1	2
commit;
set autocommit=1;
select * from t1;
c1	c2
1	2
case 2: commit is ignored if ac=1
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=1;
insert into t1 values (1, 2);
select * from t1 where c1 = 1  for update;
c1	c2
1	2
rollback;
select * from t1;
c1	c2
1	2
case 3: automatic commit before set from 0 to 1
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=0;
insert into t1 values (1, 2);
select * from t1 where c1 = 1 for update;
c1	c2
1	2
set autocommit=1;
select * from t1;
c1	c2
1	2
case 4: rollback is ignored if ac=1
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=1;
insert into t1 values (1, 2);
select * from t1 where c1 = 1  for update;
c1	c2
1	2
commit;
select * from t1;
c1	c2
1	2
case 5: rollback
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=0;
insert into t1 values (1, 2);
select * from t1 where c1 = 1  for update;
c1	c2
1	2
rollback;
set autocommit=1;
select * from t1;
c1	c2
case 5: continue commit/rollback
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=0;
insert into t1 values (1, 1);
select * from t1 where c1 = 1 for update;
c1	c2
1	1
commit;
insert into t1 values (2, 2);
select * from t1 where c1 = 2  for update;
c1	c2
2	2
commit;
insert into t1 values (3, 3);
select * from t1 where c1 = 3  for update;
c1	c2
3	3
rollback;
insert into t1 values (4, 4);
select * from t1 where c1 = 4  for update;
c1	c2
4	4
commit;
insert into t1 values (5, 5);
insert into t1 values (4, 4);
ERROR 23000: Duplicate entry ' <3006.16>=int:4' for key 'PRIMARY'
rollback;
set autocommit=1;
select * from t1;
c1	c2
1	1
2	2
4	4
case 6: fail first, and then success
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=0;
insert into t1 values (1, 1);
select * from t1 where c1 = 1 for update;
c1	c2
1	1
rollback;
insert into t1 values (1, 1);
select * from t1 where c1 = 1 for update;
c1	c2
1	1
commit;
set autocommit=1;
select * from t1;
c1	c2
1	1
case 7: no stmt success in trx
show variables like 'autocommit';
variable_name	value
autocommit	1
drop table if exists t1;
create table t1 (c1 int primary key, c2 int);
set autocommit=0;
insert into t1 values (1, 1);
commit;
insert into t1 values (1, 1);
ERROR 23000: Duplicate entry ' <3008.16>=int:1' for key 'PRIMARY'
rollback;
set autocommit=1;
select * from t1;
c1	c2
1	1
