# Makefile.in generated by automake 1.10.2 from Makefile.am.
# src/chunkserver/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/oceanbase
pkglibdir = $(libdir)/oceanbase
pkgincludedir = $(includedir)/oceanbase
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-redhat-linux-gnu
host_triplet = x86_64-redhat-linux-gnu
#am__append_1 = -fprofile-arcs -ftest-coverage
#am__append_2 = -lgcov
bin_PROGRAMS = chunkserver$(EXEEXT)
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/svn_version.mk
subdir = src/chunkserver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libchunkserver_a_AR = $(AR) $(ARFLAGS)
libchunkserver_a_LIBADD =
am_libchunkserver_a_OBJECTS = svn_version.$(OBJEXT) \
	ob_block_cache_loader.$(OBJEXT) \
	ob_block_cache_reader.$(OBJEXT) ob_cell_array_helper.$(OBJEXT) \
	ob_cell_stream.$(OBJEXT) ob_chunk_callback.$(OBJEXT) \
	ob_chunk_merge.$(OBJEXT) ob_tablet_merger_v1.$(OBJEXT) \
	ob_tablet_merger_v2.$(OBJEXT) ob_chunk_server.$(OBJEXT) \
	ob_chunk_server_main.$(OBJEXT) \
	ob_chunk_server_merger_proxy.$(OBJEXT) \
	ob_chunk_server_stat.$(OBJEXT) ob_chunk_service.$(OBJEXT) \
	ob_compactsstable_cache.$(OBJEXT) ob_disk_manager.$(OBJEXT) \
	ob_file_recycle.$(OBJEXT) ob_fileinfo_cache.$(OBJEXT) \
	ob_get_cell_stream.$(OBJEXT) \
	ob_get_cell_stream_wrapper.$(OBJEXT) \
	ob_get_param_cell_iterator.$(OBJEXT) \
	ob_get_scan_proxy.$(OBJEXT) ob_join_cache.$(OBJEXT) \
	ob_join_operator.$(OBJEXT) ob_merge_join_operator.$(OBJEXT) \
	ob_merge_operator.$(OBJEXT) ob_merge_reader.$(OBJEXT) \
	ob_multi_tablet_merger.$(OBJEXT) ob_query_agent.$(OBJEXT) \
	ob_query_service.$(OBJEXT) ob_read_param_modifier.$(OBJEXT) \
	ob_read_ups_balance.$(OBJEXT) ob_row_cell_vec.$(OBJEXT) \
	ob_rpc_proxy.$(OBJEXT) ob_scan_cell_stream.$(OBJEXT) \
	ob_schema_task.$(OBJEXT) ob_sql_rpc_stub.$(OBJEXT) \
	ob_switch_cache_utility.$(OBJEXT) ob_tablet.$(OBJEXT) \
	ob_tablet_image.$(OBJEXT) ob_tablet_manager.$(OBJEXT) \
	ob_tablet_merge_filter.$(OBJEXT) ob_ups_blacklist.$(OBJEXT) \
	ob_chunk_server_config.$(OBJEXT) \
	ob_bypass_sstable_loader.$(OBJEXT) ob_tablet_service.$(OBJEXT) \
	ob_chunk_reload_config.$(OBJEXT)
libchunkserver_a_OBJECTS = $(am_libchunkserver_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = svn_version.$(OBJEXT) ob_block_cache_loader.$(OBJEXT) \
	ob_block_cache_reader.$(OBJEXT) ob_cell_array_helper.$(OBJEXT) \
	ob_cell_stream.$(OBJEXT) ob_chunk_callback.$(OBJEXT) \
	ob_chunk_merge.$(OBJEXT) ob_tablet_merger_v1.$(OBJEXT) \
	ob_tablet_merger_v2.$(OBJEXT) ob_chunk_server.$(OBJEXT) \
	ob_chunk_server_main.$(OBJEXT) \
	ob_chunk_server_merger_proxy.$(OBJEXT) \
	ob_chunk_server_stat.$(OBJEXT) ob_chunk_service.$(OBJEXT) \
	ob_compactsstable_cache.$(OBJEXT) ob_disk_manager.$(OBJEXT) \
	ob_file_recycle.$(OBJEXT) ob_fileinfo_cache.$(OBJEXT) \
	ob_get_cell_stream.$(OBJEXT) \
	ob_get_cell_stream_wrapper.$(OBJEXT) \
	ob_get_param_cell_iterator.$(OBJEXT) \
	ob_get_scan_proxy.$(OBJEXT) ob_join_cache.$(OBJEXT) \
	ob_join_operator.$(OBJEXT) ob_merge_join_operator.$(OBJEXT) \
	ob_merge_operator.$(OBJEXT) ob_merge_reader.$(OBJEXT) \
	ob_multi_tablet_merger.$(OBJEXT) ob_query_agent.$(OBJEXT) \
	ob_query_service.$(OBJEXT) ob_read_param_modifier.$(OBJEXT) \
	ob_read_ups_balance.$(OBJEXT) ob_row_cell_vec.$(OBJEXT) \
	ob_rpc_proxy.$(OBJEXT) ob_scan_cell_stream.$(OBJEXT) \
	ob_schema_task.$(OBJEXT) ob_sql_rpc_stub.$(OBJEXT) \
	ob_switch_cache_utility.$(OBJEXT) ob_tablet.$(OBJEXT) \
	ob_tablet_image.$(OBJEXT) ob_tablet_manager.$(OBJEXT) \
	ob_tablet_merge_filter.$(OBJEXT) ob_ups_blacklist.$(OBJEXT) \
	ob_chunk_server_config.$(OBJEXT) \
	ob_bypass_sstable_loader.$(OBJEXT) ob_tablet_service.$(OBJEXT) \
	ob_chunk_reload_config.$(OBJEXT)
am_chunkserver_OBJECTS = ob_disk_path.$(OBJEXT) main.$(OBJEXT) \
	$(am__objects_1)
chunkserver_OBJECTS = $(am_chunkserver_OBJECTS)
chunkserver_LDADD = $(LDADD)
chunkserver_DEPENDENCIES = $(top_builddir)/src/sstable/libsstable.a \
	$(top_builddir)/src/compactsstable/libcompactsstable.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sql/libsql.a \
	$(top_builddir)/src/compactsstablev2/libcompactsstablev2.a \
	$(top_builddir)/src/common/compress/libcomp.a \
	$(top_builddir)/src/common/btree/libbtree.a \
	$(top_builddir)/src/common/libcommon.a \
	$(top_builddir)/src/sql/libsql.a ${EASY_LIB_PATH}/libeasy.a \
	${TBLIB_ROOT}/lib/libtbsys.a
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libchunkserver_a_SOURCES) $(chunkserver_SOURCES)
DIST_SOURCES = $(libchunkserver_a_SOURCES) $(chunkserver_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run tar
AM_CFLAGS = -g -D_OB_VERSION=400 -DCOMPATIBLE -D__USE_LARGEFILE64 -D_FILE_OFFSET_BITS=64	-D_LARGE_FILE -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -Werror -Wall
AM_CXXFLAGS = -D__STDC_LIMIT_MACROS -D_OB_VERSION=400 -D__STDC_CONSTANT_MACROS -D_NO_EXCEPTION 	-Wall -Werror -Wextra -Wunused-parameter 	-Wformat -Wconversion -Wno-deprecated -fno-strict-aliasing -g
AM_LDFLAGS = -lpthread -lc -lm -lrt -ldl -laio -lssl $(am__append_2)
AR = ar
AUTOCONF = autoconf
AUTOHEADER = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 $(am__append_1)
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"OceanBase\" -DPACKAGE_TARNAME=\"oceanbase\" -DPACKAGE_VERSION=\"0.4.1.2\" -DPACKAGE_STRING=\"OceanBase\ 0.4.1.2\" -DPACKAGE_BUGREPORT=\"qushan@taobao.com\" -DPACKAGE_URL=\"http://oceanbase.taobao.org/\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DPACKAGE=\"oceanbase\" -DVERSION=\"0.4.1.2\" -DRELEASEID=\"\"
DEPDIR = .deps
EASY_LIB_PATH = /usr/local/lib
EASY_ROOT = /usr/local
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = oceanbase
PACKAGE_BUGREPORT = qushan@taobao.com
PACKAGE_NAME = OceanBase
PACKAGE_STRING = OceanBase 0.4.1.2
PACKAGE_TARNAME = oceanbase
PACKAGE_URL = http://oceanbase.taobao.org/
PACKAGE_VERSION = 0.4.1.2
PATH_SEPARATOR = :
RANLIB = ranlib
RELEASEID = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TBLIB_ROOT = /home/rongxuan.lc/tblib_root
VERSION = 0.4.1.2
abs_builddir = /home/rongxuan.lc/taobao/git2/oceanbase/src/chunkserver
abs_srcdir = /home/rongxuan.lc/taobao/git2/oceanbase/src/chunkserver
abs_top_builddir = /home/rongxuan.lc/taobao/git2/oceanbase
abs_top_srcdir = /home/rongxuan.lc/taobao/git2/oceanbase
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-redhat-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = redhat
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-redhat-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = redhat
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/rongxuan.lc/taobao/git2/oceanbase/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
mysvnversion = svnversion -n '.'
obapi_version = 1.0.0
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
svnversioncommand = /usr/bin/svnversion
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS := $(AM_CPPFLAGS) -I${TBLIB_ROOT}/include/tbsys \
              -I${EASY_ROOT}/include/easy   \
              -I${top_srcdir}/include       \
              -I${top_srcdir}/src

LIBTOOLFLAGS = --preserve-dup-deps
LDADD = $(top_builddir)/src/sstable/libsstable.a                \
		$(top_builddir)/src/compactsstable/libcompactsstable.a  \
        $(top_builddir)/src/common/libcommon.a                  \
        $(top_builddir)/src/sql/libsql.a                        \
		$(top_builddir)/src/compactsstablev2/libcompactsstablev2.a  \
        $(top_builddir)/src/common/compress/libcomp.a           \
        $(top_builddir)/src/common/btree/libbtree.a             \
        $(top_builddir)/src/common/libcommon.a                  \
        $(top_builddir)/src/sql/libsql.a                        \
        ${EASY_LIB_PATH}/libeasy.a                              \
        ${TBLIB_ROOT}/lib/libtbsys.a

noinst_LIBRARIES = libchunkserver.a
libchunkserver_a_SOURCES = \
 chunkserver.conf.template                                               \
                                  $(top_srcdir)/svn_version.cpp          \
 ob_block_cache_loader.h          ob_block_cache_loader.cpp              \
 ob_block_cache_reader.h          ob_block_cache_reader.cpp              \
 ob_cell_array_helper.h           ob_cell_array_helper.cpp               \
 ob_cell_stream.h                 ob_cell_stream.cpp                     \
 ob_chunk_callback.h              ob_chunk_callback.cpp                  \
 ob_chunk_merge.h                 ob_chunk_merge.cpp                     \
 ob_tablet_merger_v1.h            ob_tablet_merger_v1.cpp                \
 ob_tablet_merger_v2.h            ob_tablet_merger_v2.cpp                \
 ob_chunk_server.h                ob_chunk_server.cpp                    \
 ob_chunk_server_main.h           ob_chunk_server_main.cpp               \
 ob_chunk_server_merger_proxy.h   ob_chunk_server_merger_proxy.cpp       \
 ob_chunk_server_stat.h           ob_chunk_server_stat.cpp               \
 ob_chunk_service.h               ob_chunk_service.cpp                   \
 ob_compactsstable_cache.h        ob_compactsstable_cache.cpp            \
 ob_disk_manager.h                ob_disk_manager.cpp                    \
 ob_file_recycle.h                ob_file_recycle.cpp                    \
 ob_fileinfo_cache.h              ob_fileinfo_cache.cpp                  \
 ob_get_cell_stream.h             ob_get_cell_stream.cpp                 \
 ob_get_cell_stream_wrapper.h     ob_get_cell_stream_wrapper.cpp         \
 ob_get_param_cell_iterator.h     ob_get_param_cell_iterator.cpp         \
 ob_get_scan_proxy.h              ob_get_scan_proxy.cpp                  \
 ob_join_cache.h                  ob_join_cache.cpp                      \
 ob_join_operator.h               ob_join_operator.cpp                   \
 ob_merge_join_operator.h         ob_merge_join_operator.cpp             \
 ob_merge_operator.h              ob_merge_operator.cpp                  \
 ob_merge_reader.h                ob_merge_reader.cpp                    \
 ob_multi_tablet_merger.h         ob_multi_tablet_merger.cpp             \
 ob_query_agent.h                 ob_query_agent.cpp                     \
 ob_query_service.h               ob_query_service.cpp                   \
 ob_read_param_modifier.h         ob_read_param_modifier.cpp             \
 ob_read_ups_balance.h            ob_read_ups_balance.cpp                \
 ob_row_cell_vec.h                ob_row_cell_vec.cpp                    \
 ob_rpc_proxy.h                   ob_rpc_proxy.cpp                       \
 ob_scan_cell_stream.h            ob_scan_cell_stream.cpp                \
 ob_schema_manager.h                                                     \
 ob_schema_task.h                 ob_schema_task.cpp                     \
 ob_sql_query_service.h                                                  \
 ob_sql_rpc_stub.h                ob_sql_rpc_stub.cpp                    \
 ob_switch_cache_utility.h        ob_switch_cache_utility.cpp            \
 ob_tablet.h                      ob_tablet.cpp                          \
 ob_tablet_image.h                ob_tablet_image.cpp                    \
 ob_tablet_manager.h              ob_tablet_manager.cpp                  \
 ob_tablet_merge_filter.h         ob_tablet_merge_filter.cpp             \
 ob_ups_blacklist.h               ob_ups_blacklist.cpp                   \
 ob_chunk_server_config.h         ob_chunk_server_config.cpp             \
 ob_bypass_sstable_loader.h       ob_bypass_sstable_loader.cpp           \
 ob_tablet_service.h              ob_tablet_service.cpp                  \
 ob_chunk_reload_config.h         ob_chunk_reload_config.cpp

chunkserver_SOURCES = ob_disk_path.cpp main.cpp ${libchunkserver_a_SOURCES}

# rules to auto generate svn_version.cpp
BUILT_SOURCES = $(top_srcdir)/svn_version.cpp $(top_srcdir)/svn_dist_version
CLEANFILES = $(top_srcdir)/svn_version.cpp $(top_srcdir)/svn_version.c $(top_srcdir)/svn_dist_version
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/svn_version.mk $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/chunkserver/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/chunkserver/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libchunkserver.a: $(libchunkserver_a_OBJECTS) $(libchunkserver_a_DEPENDENCIES) 
	-rm -f libchunkserver.a
	$(libchunkserver_a_AR) libchunkserver.a $(libchunkserver_a_OBJECTS) $(libchunkserver_a_LIBADD)
	$(RANLIB) libchunkserver.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
chunkserver$(EXEEXT): $(chunkserver_OBJECTS) $(chunkserver_DEPENDENCIES) 
	@rm -f chunkserver$(EXEEXT)
	$(CXXLINK) $(chunkserver_OBJECTS) $(chunkserver_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/ob_block_cache_loader.Po
include ./$(DEPDIR)/ob_block_cache_reader.Po
include ./$(DEPDIR)/ob_bypass_sstable_loader.Po
include ./$(DEPDIR)/ob_cell_array_helper.Po
include ./$(DEPDIR)/ob_cell_stream.Po
include ./$(DEPDIR)/ob_chunk_callback.Po
include ./$(DEPDIR)/ob_chunk_merge.Po
include ./$(DEPDIR)/ob_chunk_reload_config.Po
include ./$(DEPDIR)/ob_chunk_server.Po
include ./$(DEPDIR)/ob_chunk_server_config.Po
include ./$(DEPDIR)/ob_chunk_server_main.Po
include ./$(DEPDIR)/ob_chunk_server_merger_proxy.Po
include ./$(DEPDIR)/ob_chunk_server_stat.Po
include ./$(DEPDIR)/ob_chunk_service.Po
include ./$(DEPDIR)/ob_compactsstable_cache.Po
include ./$(DEPDIR)/ob_disk_manager.Po
include ./$(DEPDIR)/ob_disk_path.Po
include ./$(DEPDIR)/ob_file_recycle.Po
include ./$(DEPDIR)/ob_fileinfo_cache.Po
include ./$(DEPDIR)/ob_get_cell_stream.Po
include ./$(DEPDIR)/ob_get_cell_stream_wrapper.Po
include ./$(DEPDIR)/ob_get_param_cell_iterator.Po
include ./$(DEPDIR)/ob_get_scan_proxy.Po
include ./$(DEPDIR)/ob_join_cache.Po
include ./$(DEPDIR)/ob_join_operator.Po
include ./$(DEPDIR)/ob_merge_join_operator.Po
include ./$(DEPDIR)/ob_merge_operator.Po
include ./$(DEPDIR)/ob_merge_reader.Po
include ./$(DEPDIR)/ob_multi_tablet_merger.Po
include ./$(DEPDIR)/ob_query_agent.Po
include ./$(DEPDIR)/ob_query_service.Po
include ./$(DEPDIR)/ob_read_param_modifier.Po
include ./$(DEPDIR)/ob_read_ups_balance.Po
include ./$(DEPDIR)/ob_row_cell_vec.Po
include ./$(DEPDIR)/ob_rpc_proxy.Po
include ./$(DEPDIR)/ob_scan_cell_stream.Po
include ./$(DEPDIR)/ob_schema_task.Po
include ./$(DEPDIR)/ob_sql_rpc_stub.Po
include ./$(DEPDIR)/ob_switch_cache_utility.Po
include ./$(DEPDIR)/ob_tablet.Po
include ./$(DEPDIR)/ob_tablet_image.Po
include ./$(DEPDIR)/ob_tablet_manager.Po
include ./$(DEPDIR)/ob_tablet_merge_filter.Po
include ./$(DEPDIR)/ob_tablet_merger_v1.Po
include ./$(DEPDIR)/ob_tablet_merger_v2.Po
include ./$(DEPDIR)/ob_tablet_service.Po
include ./$(DEPDIR)/ob_ups_blacklist.Po
include ./$(DEPDIR)/svn_version.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

svn_version.o: $(top_srcdir)/svn_version.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svn_version.o -MD -MP -MF $(DEPDIR)/svn_version.Tpo -c -o svn_version.o `test -f '$(top_srcdir)/svn_version.cpp' || echo '$(srcdir)/'`$(top_srcdir)/svn_version.cpp
	mv -f $(DEPDIR)/svn_version.Tpo $(DEPDIR)/svn_version.Po
#	source='$(top_srcdir)/svn_version.cpp' object='svn_version.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svn_version.o `test -f '$(top_srcdir)/svn_version.cpp' || echo '$(srcdir)/'`$(top_srcdir)/svn_version.cpp

svn_version.obj: $(top_srcdir)/svn_version.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svn_version.obj -MD -MP -MF $(DEPDIR)/svn_version.Tpo -c -o svn_version.obj `if test -f '$(top_srcdir)/svn_version.cpp'; then $(CYGPATH_W) '$(top_srcdir)/svn_version.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/svn_version.cpp'; fi`
	mv -f $(DEPDIR)/svn_version.Tpo $(DEPDIR)/svn_version.Po
#	source='$(top_srcdir)/svn_version.cpp' object='svn_version.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svn_version.obj `if test -f '$(top_srcdir)/svn_version.cpp'; then $(CYGPATH_W) '$(top_srcdir)/svn_version.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/svn_version.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool clean-local clean-noinstLIBRARIES \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS

$(top_srcdir)/svn_version.cpp: FORCE
	echo -n 'const char* svn_version() { const char* SVN_Version = "' > $@
	svnversion -n '.' >> $(top_srcdir)/svn_version.cpp
	echo '"; return SVN_Version; }' >> $@
	echo 'const char* build_date() { return __DATE__; }' >> $@
	echo 'const char* build_time() { return __TIME__; }' >> $@
	echo -n 'const char* build_flags() { return "' >> $@ && echo -n $(CXXFLAGS) $(CPPFLAGS) |sed s/\"//g >> $@ && echo '"; }' >> $@
	cp $@ $(top_srcdir)/svn_version.c

$(top_srcdir)/svn_dist_version: FORCE
	svnversion -n '.' > $@

FORCE:

# rules to auto generate svn_version.cpp

#pkgdata_data_DATA=chunkserver.conf.template
#pkgdata_datadir=${prefix}/etc
clean-local:
	-rm -f *.gcov *.gcno *.gcda
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
