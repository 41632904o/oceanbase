# Makefile.in generated by automake 1.10.2 from Makefile.am.
# src/common/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/oceanbase
pkglibdir = $(libdir)/oceanbase
pkgincludedir = $(includedir)/oceanbase
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-redhat-linux-gnu
host_triplet = x86_64-redhat-linux-gnu
#am__append_1 = -fprofile-arcs -ftest-coverage
#am__append_2 = -lgcov
subdir = src/common
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libcommon_a_AR = $(AR) $(ARFLAGS)
libcommon_a_LIBADD =
am__objects_1 = base_main.$(OBJEXT) \
	batch_packet_queue_thread.$(OBJEXT) dlist.$(OBJEXT) \
	file_directory_utils.$(OBJEXT) file_utils.$(OBJEXT) \
	futex_sem.$(OBJEXT) murmur_hash.$(OBJEXT) \
	ob_array_lock.$(OBJEXT) ob_base_client.$(OBJEXT) \
	ob_base_server.$(OBJEXT) ob_cache.$(OBJEXT) \
	ob_cell_array.$(OBJEXT) ob_check_runnable.$(OBJEXT) \
	ob_client_helper.$(OBJEXT) ob_client_manager.$(OBJEXT) \
	ob_client_proxy.$(OBJEXT) ob_client_wait_obj.$(OBJEXT) \
	ob_common_param.$(OBJEXT) ob_common_rpc_stub.$(OBJEXT) \
	ob_compact_cell_iterator.$(OBJEXT) \
	ob_compact_cell_util.$(OBJEXT) \
	ob_compact_cell_writer.$(OBJEXT) ob_compose_operator.$(OBJEXT) \
	ob_composite_column.$(OBJEXT) ob_cond_info.$(OBJEXT) \
	ob_counter.$(OBJEXT) ob_crc64.$(OBJEXT) ob_cur_time.$(OBJEXT) \
	ob_decimal_helper.$(OBJEXT) ob_direct_log_reader.$(OBJEXT) \
	ob_easy_log.$(OBJEXT) ob_encrypt.$(OBJEXT) \
	ob_expr_obj.$(OBJEXT) ob_extra_tables_schema.$(OBJEXT) \
	ob_fetch_runnable.$(OBJEXT) ob_file.$(OBJEXT) \
	ob_file_client.$(OBJEXT) ob_file_service.$(OBJEXT) \
	ob_flag.$(OBJEXT) ob_get_param.$(OBJEXT) ob_groupby.$(OBJEXT) \
	ob_groupby_operator.$(OBJEXT) ob_infix_expression.$(OBJEXT) \
	ob_lease_common.$(OBJEXT) ob_lighty_queue.$(OBJEXT) \
	ob_log_cursor.$(OBJEXT) ob_log_dir_scanner.$(OBJEXT) \
	ob_log_entry.$(OBJEXT) ob_log_generator.$(OBJEXT) \
	ob_log_reader.$(OBJEXT) ob_log_replay_runnable.$(OBJEXT) \
	ob_log_writer.$(OBJEXT) ob_log_writer2.$(OBJEXT) \
	ob_log_data_writer.$(OBJEXT) ob_login_mgr.$(OBJEXT) \
	ob_malloc.$(OBJEXT) ob_memory_pool.$(OBJEXT) \
	ob_merger.$(OBJEXT) ob_meta_cache.$(OBJEXT) \
	ob_mod_define.$(OBJEXT) ob_ms_list.$(OBJEXT) \
	ob_mutator.$(OBJEXT) ob_mutator_helper.$(OBJEXT) \
	ob_mutex_task.$(OBJEXT) ob_new_scanner.$(OBJEXT) \
	ob_new_scanner_helper.$(OBJEXT) ob_number.$(OBJEXT) \
	ob_obi_role.$(OBJEXT) ob_obj_cast.$(OBJEXT) \
	ob_object.$(OBJEXT) ob_obj_type.$(OBJEXT) ob_packet.$(OBJEXT) \
	ob_packet_queue.$(OBJEXT) ob_packet_queue_thread.$(OBJEXT) \
	ob_perm_components.$(OBJEXT) ob_pool.$(OBJEXT) \
	ob_postfix_expression.$(OBJEXT) ob_privilege.$(OBJEXT) \
	ob_privilege_manager.$(OBJEXT) ob_privilege_type.$(OBJEXT) \
	ob_probability_random.$(OBJEXT) ob_range.$(OBJEXT) \
	ob_range2.$(OBJEXT) ob_raw_row.$(OBJEXT) \
	ob_record_header.$(OBJEXT) ob_record_header_v2.$(OBJEXT) \
	ob_regex.$(OBJEXT) ob_repeated_log_reader.$(OBJEXT) \
	ob_return_operator.$(OBJEXT) ob_ring_buffer.$(OBJEXT) \
	ob_row.$(OBJEXT) ob_row_compaction.$(OBJEXT) \
	ob_row_desc.$(OBJEXT) ob_row_desc_ext.$(OBJEXT) \
	ob_row_fuse.$(OBJEXT) ob_row_store.$(OBJEXT) \
	ob_row_util.$(OBJEXT) ob_rowkey.$(OBJEXT) \
	ob_rowkey_helper.$(OBJEXT) ob_rs_ups_message.$(OBJEXT) \
	ob_scan_param.$(OBJEXT) ob_scanner.$(OBJEXT) \
	ob_schema.$(OBJEXT) ob_schema_helper.$(OBJEXT) \
	ob_schema_manager.$(OBJEXT) ob_schema_service.$(OBJEXT) \
	ob_schema_service_impl.$(OBJEXT) ob_schema_table.$(OBJEXT) \
	ob_seq_queue.$(OBJEXT) ob_server.$(OBJEXT) \
	ob_server_ext.$(OBJEXT) ob_server_getter.$(OBJEXT) \
	ob_session_mgr.$(OBJEXT) ob_shadow_server.$(OBJEXT) \
	ob_simple_condition.$(OBJEXT) ob_simple_filter.$(OBJEXT) \
	ob_single_log_reader.$(OBJEXT) ob_single_server.$(OBJEXT) \
	ob_slab.$(OBJEXT) ob_slave_mgr.$(OBJEXT) \
	ob_spop_spush_queue.$(OBJEXT) ob_stack_allocator.$(OBJEXT) \
	ob_statistics.$(OBJEXT) ob_common_stat.$(OBJEXT) \
	ob_string_search.$(OBJEXT) ob_strings.$(OBJEXT) \
	ob_table_id_name.$(OBJEXT) ob_tablet_info.$(OBJEXT) \
	ob_tbnet_callback.$(OBJEXT) ob_thread_mempool.$(OBJEXT) \
	ob_timer.$(OBJEXT) ob_token.$(OBJEXT) ob_trace_log.$(OBJEXT) \
	ob_tsi_factory.$(OBJEXT) ob_ups_info.$(OBJEXT) \
	ob_ups_row.$(OBJEXT) ob_ups_row_util.$(OBJEXT) \
	priority_packet_queue_thread.$(OBJEXT) thread_buffer.$(OBJEXT) \
	utility.$(OBJEXT) ob_rpc_stub.$(OBJEXT) \
	ob_general_rpc_stub.$(OBJEXT) ob_general_rpc_proxy.$(OBJEXT) \
	ob_tp_malloc.$(OBJEXT) ob_tsi_block_allocator.$(OBJEXT) \
	ob_tc_malloc.$(OBJEXT) ob_iterator_adaptor.$(OBJEXT) \
	ob_transaction.$(OBJEXT) ob_nb_accessor.$(OBJEXT) \
	nb_scan_cond.$(OBJEXT) nb_query_res.$(OBJEXT) \
	ob_profile_log.$(OBJEXT) ob_trace_id.$(OBJEXT) \
	nb_table_row.$(OBJEXT) ob_trigger_msg.$(OBJEXT) \
	ob_trigger_event_util.$(OBJEXT) \
	ob_inner_table_operator.$(OBJEXT) \
	ob_encrypted_helper.$(OBJEXT) ob_server_config.$(OBJEXT) \
	ob_system_config.$(OBJEXT) ob_system_config_key.$(OBJEXT) \
	ob_config_manager.$(OBJEXT) ob_config.$(OBJEXT) \
	ob_config_helper.$(OBJEXT) ob_version.$(OBJEXT) \
	ob_libeasy_statistics.$(OBJEXT)
am__objects_2 = ob_ms_cache_table.$(OBJEXT) ob_btree_map.$(OBJEXT) \
	ob_tablet_location_list.$(OBJEXT) \
	ob_tablet_location_cache_proxy.$(OBJEXT) \
	ob_tablet_location_range_iterator.$(OBJEXT) \
	ob_tablet_location_cache.$(OBJEXT)
am_libcommon_a_OBJECTS = $(am__objects_1) $(am__objects_2)
libcommon_a_OBJECTS = $(am_libcommon_a_OBJECTS)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libcommon_a_SOURCES)
DIST_SOURCES = $(libcommon_a_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run tar
AM_CFLAGS = -g -D_OB_VERSION=400 -DCOMPATIBLE -D__USE_LARGEFILE64 -D_FILE_OFFSET_BITS=64	-D_LARGE_FILE -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -Werror -Wall
AM_CXXFLAGS = -D__STDC_LIMIT_MACROS -D_OB_VERSION=400 -D__STDC_CONSTANT_MACROS -D_NO_EXCEPTION 	-Wall -Werror -Wextra -Wunused-parameter 	-Wformat -Wconversion -Wno-deprecated -fno-strict-aliasing -g
AM_LDFLAGS = -lpthread -lc -lm -lrt -lcrypt -lssl -laio \
	$(am__append_2)
AR = ar
AUTOCONF = autoconf
AUTOHEADER = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run autoheader
AUTOMAKE = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 $(am__append_1)
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"OceanBase\" -DPACKAGE_TARNAME=\"oceanbase\" -DPACKAGE_VERSION=\"0.4.1.2\" -DPACKAGE_STRING=\"OceanBase\ 0.4.1.2\" -DPACKAGE_BUGREPORT=\"qushan@taobao.com\" -DPACKAGE_URL=\"http://oceanbase.taobao.org/\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DPACKAGE=\"oceanbase\" -DVERSION=\"0.4.1.2\" -DRELEASEID=\"\"
DEPDIR = .deps
EASY_LIB_PATH = /usr/local/lib
EASY_ROOT = /usr/local
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = g77
FFLAGS = -g -O2
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/rongxuan.lc/taobao/git2/oceanbase/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = oceanbase
PACKAGE_BUGREPORT = qushan@taobao.com
PACKAGE_NAME = OceanBase
PACKAGE_STRING = OceanBase 0.4.1.2
PACKAGE_TARNAME = oceanbase
PACKAGE_URL = http://oceanbase.taobao.org/
PACKAGE_VERSION = 0.4.1.2
PATH_SEPARATOR = :
RANLIB = ranlib
RELEASEID = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
TBLIB_ROOT = /home/rongxuan.lc/tblib_root
VERSION = 0.4.1.2
abs_builddir = /home/rongxuan.lc/taobao/git2/oceanbase/src/common
abs_srcdir = /home/rongxuan.lc/taobao/git2/oceanbase/src/common
abs_top_builddir = /home/rongxuan.lc/taobao/git2/oceanbase
abs_top_srcdir = /home/rongxuan.lc/taobao/git2/oceanbase
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = g77
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-redhat-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = redhat
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-redhat-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = redhat
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/rongxuan.lc/taobao/git2/oceanbase/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
mysvnversion = svnversion -n '.'
obapi_version = 1.0.0
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
svnversioncommand = /usr/bin/svnversion
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
AM_CPPFLAGS := $(AM_CPPFLAGS) -I${TBLIB_ROOT}/include/tbsys\
             -I${EASY_ROOT}/include/easy\
             -I${top_srcdir}/include\
             -I${top_srcdir}/src\
             -fPIC

LDADD = ${EASY_LIB_PATH}/libeasy.a \
        ${TBLIB_ROOT}/lib/libtbsys.a \
        $(top_builddir)/src/common/btree/libbtree.a \
        ${top_builddir}/src/sql/libsql.a

noinst_LIBRARIES = libcommon.a
common_sources = \
  base_main.h                      base_main.cpp                        \
  batch_packet_queue_thread.h      batch_packet_queue_thread.cpp        \
  bloom_filter.h                                                        \
  check_sum.h                                                           \
  data_buffer.h                                                         \
  debug.h                                                               \
  gperf.h 								\
  dlist.h                          dlist.cpp                            \
  file_directory_utils.h           file_directory_utils.cpp             \
  file_utils.h                     file_utils.cpp                       \
  futex_sem.h                      futex_sem.cpp                        \
  hash/ob_hashmap.h                                                     \
  hash/ob_hashset.h                                                     \
  hash/ob_hashtable.h                                                   \
  hash/ob_hashutils.h                                                   \
  hash/ob_serialization.h                                               \
	cmbtree/btree_base.h                                                  \
	cmbtree/btree_counter.h                                               \
	cmbtree/btree_default_alloc.h                                         \
	cmbtree/btree_define.h                                                \
	cmbtree/btree_handle.h                                                \
	cmbtree/btree_mem_pool.h                                              \
	cmbtree/btree_mutex.h                                                 \
	cmbtree/btree_node.h                                                  \
	cmbtree/btree_read_param.h                                            \
	cmbtree/btree_recycle_node.h                                          \
	cmbtree/btree_recycle_pool.h                                          \
	cmbtree/btree_thread_store.h                                          \
	cmbtree/btree_tid.h                                                   \
	cmbtree/btree_write_param.h                                           \
	cmbtree/qlock.h                                                       \
	cmbtree/thread.h                                                      \
  limit_array.h                                                         \
  murmur_hash.h                    murmur_hash.cpp                      \
  ob_action_flag.h                                                      \
  ob_array.h                                                            \
  ob_array_helper.h                                                     \
  ob_array_lock.h                  ob_array_lock.cpp                    \
  ob_atomic.h                                                           \
  ob_atomic_type.h                                                      \
  ob_base_client.h                 ob_base_client.cpp                   \
  ob_base_server.h                 ob_base_server.cpp                   \
  ob_bit_set.h                                                          \
  ob_bitmap.h                                                           \
  ob_bloomfilter.h                                                      \
  ob_buffer.h                                                           \
  ob_buffer_helper.h                                                    \
  ob_cache.h                       ob_cache.cpp                         \
  ob_cached_allocator.h                                                 \
  ob_cell_array.h                  ob_cell_array.cpp                    \
  ob_cell_meta.h                                                        \
  ob_check_runnable.h              ob_check_runnable.cpp                \
  ob_cipher.h                                                           \
  ob_client_helper.h               ob_client_helper.cpp                 \
  ob_client_manager.h              ob_client_manager.cpp                \
  ob_client_proxy.h                ob_client_proxy.cpp                  \
  ob_client_wait_obj.h             ob_client_wait_obj.cpp               \
  ob_column_filter.h                                                    \
  ob_common_param.h                ob_common_param.cpp                  \
  ob_common_rpc_stub.h             ob_common_rpc_stub.cpp               \
  ob_compact_cell_iterator.h       ob_compact_cell_iterator.cpp         \
  ob_compact_cell_util.h           ob_compact_cell_util.cpp             \
  ob_compact_cell_writer.h         ob_compact_cell_writer.cpp           \
  ob_compact_store_type.h                                               \
  ob_compose_operator.h            ob_compose_operator.cpp              \
  ob_composite_column.h            ob_composite_column.cpp              \
  ob_cond_info.h                   ob_cond_info.cpp                     \
  ob_counter.h                     ob_counter.cpp                       \
  ob_crc64.h                       ob_crc64.cpp                         \
  ob_cur_time.h                    ob_cur_time.cpp                      \
  ob_decimal_helper.h              ob_decimal_helper.cpp                \
  ob_define.h                                                           \
  ob_delay_guard.h                                                      \
  ob_direct_log_reader.h           ob_direct_log_reader.cpp             \
  ob_easy_array.h                                                       \
  ob_easy_log.h                    ob_easy_log.cpp                      \
  ob_encrypt.h                     ob_encrypt.cpp                       \
  ob_endian.h                                                           \
  ob_expr_obj.h                    ob_expr_obj.cpp                      \
  ob_expression.h                                                       \
  ob_extra_tables_schema.h         ob_extra_tables_schema.cpp           \
  ob_fetch_runnable.h              ob_fetch_runnable.cpp                \
  ob_file.h                        ob_file.cpp                          \
  ob_file_client.h                 ob_file_client.cpp                   \
  ob_file_service.h                ob_file_service.cpp                  \
  ob_fileinfo_manager.h                                                 \
  ob_fixed_queue.h                                                      \
  ob_single_pop_queue.h                                                 \
  ob_resource_pool.h                                                    \
  ob_flag.h                        ob_flag.cpp                          \
  ob_get_param.h                   ob_get_param.cpp                     \
  ob_groupby.h                     ob_groupby.cpp                       \
  ob_groupby_operator.h            ob_groupby_operator.cpp              \
  ob_hint.h                                                             \
  ob_infix_expression.h            ob_infix_expression.cpp              \
  ob_iterator.h                                                         \
  ob_kv_storecache.h                                                    \
  ob_lease_common.h                ob_lease_common.cpp                  \
  ob_lighty_queue.h                ob_lighty_queue.cpp                  \
  ob_link.h                                                             \
  ob_list.h                                                             \
  ob_log_cursor.h                  ob_log_cursor.cpp                    \
  ob_log_dir_scanner.h             ob_log_dir_scanner.cpp               \
  ob_log_entry.h                   ob_log_entry.cpp                     \
  ob_log_generator.h               ob_log_generator.cpp                 \
  ob_log_reader.h                  ob_log_reader.cpp                    \
  ob_log_replay_runnable.h         ob_log_replay_runnable.cpp           \
  ob_log_writer.h                  ob_log_writer.cpp                    \
  ob_log_writer2.h                 ob_log_writer2.cpp                   \
  ob_log_data_writer.h                 ob_log_data_writer.cpp                   \
  ob_login_mgr.h                   ob_login_mgr.cpp                     \
  ob_lrucache.h                                                         \
  ob_malloc.h                      ob_malloc.cpp                        \
  ob_memory_pool.h                 ob_memory_pool.cpp                   \
  ob_merger.h                      ob_merger.cpp                        \
  ob_meta_cache.h                  ob_meta_cache.cpp                    \
  ob_mod_define.h                  ob_mod_define.cpp                    \
  ob_ms_list.h                     ob_ms_list.cpp                       \
  ob_mutator.h                     ob_mutator.cpp                       \
  ob_mutator_helper.h              ob_mutator_helper.cpp                \
  ob_mutex_task.h                  ob_mutex_task.cpp                    \
  ob_new_scanner.h                 ob_new_scanner.cpp                   \
  ob_new_scanner_helper.h          ob_new_scanner_helper.cpp            \
  ob_number.h                      ob_number.cpp                        \
  ob_obi_role.h                    ob_obi_role.cpp                      \
  ob_obj_cast.h                    ob_obj_cast.cpp                      \
  ob_object.h                      ob_object.cpp                        \
  ob_obj_type.h                    ob_obj_type.cpp                      \
  ob_operate_result.h                                                   \
  ob_packet.h                      ob_packet.cpp                        \
  ob_packet_factory.h                                                   \
  ob_packet_queue.h                ob_packet_queue.cpp                  \
  ob_packet_queue_handler.h                                             \
  ob_packet_queue_thread.h         ob_packet_queue_thread.cpp           \
  ob_perm_components.h             ob_perm_components.cpp               \
  ob_pointer_array.h                                                    \
  ob_pool.h                        ob_pool.cpp                          \
  ob_postfix_expression.h          ob_postfix_expression.cpp            \
  ob_privilege.h                   ob_privilege.cpp                     \
  ob_privilege_manager.h           ob_privilege_manager.cpp             \
  ob_privilege_type.h              ob_privilege_type.cpp                \
  ob_probability_random.h          ob_probability_random.cpp            \
  ob_range.h                       ob_range.cpp                         \
  ob_range2.h                      ob_range2.cpp                        \
  ob_raw_row.h                     ob_raw_row.cpp                       \
  ob_read_common_data.h                                                 \
  ob_record_header.h               ob_record_header.cpp                 \
	ob_record_header_v2.h            ob_record_header_v2.cpp              \
  ob_regex.h                       ob_regex.cpp                         \
  ob_repeated_log_reader.h         ob_repeated_log_reader.cpp           \
  ob_result.h                                                           \
  ob_return_operator.h             ob_return_operator.cpp               \
  ob_ring_buffer.h                 ob_ring_buffer.cpp                   \
  ob_role_mgr.h                                                         \
  ob_row.h                         ob_row.cpp                           \
  ob_row_compaction.h              ob_row_compaction.cpp                \
  ob_row_desc.h                    ob_row_desc.cpp                      \
  ob_row_desc_ext.h                ob_row_desc_ext.cpp                  \
  ob_row_fuse.h                    ob_row_fuse.cpp                      \
  ob_row_iterator.h                                                     \
  ob_row_store.h                   ob_row_store.cpp                     \
  ob_row_util.h                    ob_row_util.cpp                      \
  ob_rowkey.h                      ob_rowkey.cpp                        \
  ob_rowkey_helper.h               ob_rowkey_helper.cpp                 \
  ob_rs_ups_message.h              ob_rs_ups_message.cpp                \
  ob_scan_param.h                  ob_scan_param.cpp                    \
  ob_scanner.h                     ob_scanner.cpp                       \
  ob_schema.h                      ob_schema.cpp                        \
  ob_schema_helper.h               ob_schema_helper.cpp                 \
  ob_schema_manager.h              ob_schema_manager.cpp                \
  ob_schema_service.h              ob_schema_service.cpp                \
  ob_schema_service_impl.h         ob_schema_service_impl.cpp           \
  ob_schema_table.h                ob_schema_table.cpp                  \
  ob_seq_queue.h                   ob_seq_queue.cpp                     \
  ob_server.h                      ob_server.cpp                        \
  ob_server_ext.h                  ob_server_ext.cpp                    \
  ob_server_getter.h               ob_server_getter.cpp                 \
  ob_session_mgr.h                 ob_session_mgr.cpp                   \
  ob_shadow_server.h               ob_shadow_server.cpp                 \
  ob_simple_condition.h            ob_simple_condition.cpp              \
  ob_simple_filter.h               ob_simple_filter.cpp                 \
  ob_simple_right_join_cell.h                                           \
  ob_simple_tpl.h                                                       \
  ob_single_log_reader.h           ob_single_log_reader.cpp             \
  ob_single_server.h               ob_single_server.cpp                 \
  ob_slab.h                        ob_slab.cpp                          \
  ob_slave_mgr.h                   ob_slave_mgr.cpp                     \
  ob_spin_lock.h                                                        \
  ob_spin_rwlock.h                                                      \
  ob_spop_spush_queue.h            ob_spop_spush_queue.cpp              \
  ob_sql_ups_rpc_proxy.h                                                \
  ob_stack_allocator.h             ob_stack_allocator.cpp               \
  ob_statistics.h                  ob_statistics.cpp                    \
  ob_common_stat.h                 ob_common_stat.cpp                   \
  ob_string.h                                                           \
  ob_string_buf.h                  ob_string_buf.ipp                    \
  ob_string_search.h               ob_string_search.cpp                 \
  ob_strings.h                     ob_strings.cpp                       \
  ob_switch.h                                                           \
  ob_table_id_name.h               ob_table_id_name.cpp                 \
  ob_tablet_info.h                 ob_tablet_info.cpp                   \
  ob_task.h                                                             \
  ob_tbnet_callback.h              ob_tbnet_callback.cpp                \
  ob_thread_mempool.h              ob_thread_mempool.cpp                \
  ob_thread_objpool.h                                                   \
  ob_thread_store.h                                                     \
  ob_timer.h                       ob_timer.cpp                         \
  ob_token.h                       ob_token.cpp                         \
  ob_trace_log.h                   ob_trace_log.cpp                     \
  ob_tsi_factory.h                 ob_tsi_factory.cpp                   \
  ob_typed_queue.h                                                      \
  ob_ups_info.h                    ob_ups_info.cpp                      \
  ob_ups_row.h                     ob_ups_row.cpp                       \
  ob_ups_row_util.h                ob_ups_row_util.cpp                  \
  ob_ups_rpc_proxy.h                                                    \
  ob_vector.h                      ob_vector.ipp                        \
  page_arena.h                                                          \
  priority_packet_queue_thread.h   priority_packet_queue_thread.cpp     \
  qlock.h                                                               \
  serialization.h                                                       \
  thread_buffer.h                  thread_buffer.cpp                    \
  utility.h                        utility.cpp                          \
  ob_rpc_stub.h                    ob_rpc_stub.cpp                      \
  ob_general_rpc_stub.h            ob_general_rpc_stub.cpp              \
  ob_general_rpc_proxy.h           ob_general_rpc_proxy.cpp             \
  ob_tp_malloc.h ob_tp_malloc.cpp                                       \
  ob_tsi_block_allocator.h         ob_tsi_block_allocator.cpp           \
  ob_tc_malloc.h         ob_tc_malloc.cpp           	\
  ob_iterator_adaptor.h            ob_iterator_adaptor.cpp              \
  ob_transaction.h                 ob_transaction.cpp                   \
  nb_accessor/ob_nb_accessor.h     nb_accessor/ob_nb_accessor.cpp       \
  nb_accessor/nb_scan_cond.h       nb_accessor/nb_scan_cond.cpp         \
  nb_accessor/nb_query_res.h       nb_accessor/nb_query_res.cpp         \
	ob_profile_log.h								 ob_profile_log.cpp										\
	ob_trace_id.h										 ob_trace_id.cpp                      \
	ob_profile_type.h                                                     \
  nb_accessor/nb_table_row.h       nb_accessor/nb_table_row.cpp         \
  ob_allocator.h                                                        \
  ob_schema_macro_define.h                                              \
  ob_cellinfo_processor.h                                               \
  ob_chunk_server_item.h                                                \
	ob_trigger_msg.h                 ob_trigger_msg.cpp                   \
	ob_trigger_event.h                                                    \
  ob_trigger_event_util.h          ob_trigger_event_util.cpp            \
  ob_inner_table_operator.h        ob_inner_table_operator.cpp          \
  ob_cluster_server.h\
  ob_rpc_macros.h\
	ob_encrypted_helper.h	ob_encrypted_helper.cpp\
  ob_se_array.h \
  ob_server_config.h                 ob_server_config.cpp \
  ob_system_config.h                 ob_system_config.cpp	\
  ob_system_config_key.h             ob_system_config_key.cpp	\
  ob_system_config_value.h					\
  ob_config_manager.h                ob_config_manager.cpp      \
  ob_config.h                        ob_config.cpp              \
  ob_config_helper.h                 ob_config_helper.cpp       \
  ob_version.h                       ob_version.cpp\
	ob_libeasy_statistics.h            ob_libeasy_statistics.cpp\
	ob_reload_config.h

location_sources = \
  location/ob_ms_cache_table.h location/ob_ms_cache_table.cpp                                 \
  location/ob_btree_map.h   location/ob_btree_map.cpp                                         \
  location/ob_tablet_location_list.h   location/ob_tablet_location_list.cpp                   \
  location/ob_tablet_location_cache_proxy.h   location/ob_tablet_location_cache_proxy.cpp     \
  location/ob_tablet_location_range_iterator.h location/ob_tablet_location_range_iterator.cpp \
  location/ob_tablet_location_cache.h  location/ob_tablet_location_cache.cpp

libcommon_a_SOURCES = ${common_sources} ${location_sources}
SUBDIRS = btree compress roottable
DIST_SUBDIRS = btree compress roottable
EXTRA_DIST = 
all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/common/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/common/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libcommon.a: $(libcommon_a_OBJECTS) $(libcommon_a_DEPENDENCIES) 
	-rm -f libcommon.a
	$(libcommon_a_AR) libcommon.a $(libcommon_a_OBJECTS) $(libcommon_a_LIBADD)
	$(RANLIB) libcommon.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/base_main.Po
include ./$(DEPDIR)/batch_packet_queue_thread.Po
include ./$(DEPDIR)/dlist.Po
include ./$(DEPDIR)/file_directory_utils.Po
include ./$(DEPDIR)/file_utils.Po
include ./$(DEPDIR)/futex_sem.Po
include ./$(DEPDIR)/murmur_hash.Po
include ./$(DEPDIR)/nb_query_res.Po
include ./$(DEPDIR)/nb_scan_cond.Po
include ./$(DEPDIR)/nb_table_row.Po
include ./$(DEPDIR)/ob_array_lock.Po
include ./$(DEPDIR)/ob_base_client.Po
include ./$(DEPDIR)/ob_base_server.Po
include ./$(DEPDIR)/ob_btree_map.Po
include ./$(DEPDIR)/ob_cache.Po
include ./$(DEPDIR)/ob_cell_array.Po
include ./$(DEPDIR)/ob_check_runnable.Po
include ./$(DEPDIR)/ob_client_helper.Po
include ./$(DEPDIR)/ob_client_manager.Po
include ./$(DEPDIR)/ob_client_proxy.Po
include ./$(DEPDIR)/ob_client_wait_obj.Po
include ./$(DEPDIR)/ob_common_param.Po
include ./$(DEPDIR)/ob_common_rpc_stub.Po
include ./$(DEPDIR)/ob_common_stat.Po
include ./$(DEPDIR)/ob_compact_cell_iterator.Po
include ./$(DEPDIR)/ob_compact_cell_util.Po
include ./$(DEPDIR)/ob_compact_cell_writer.Po
include ./$(DEPDIR)/ob_compose_operator.Po
include ./$(DEPDIR)/ob_composite_column.Po
include ./$(DEPDIR)/ob_cond_info.Po
include ./$(DEPDIR)/ob_config.Po
include ./$(DEPDIR)/ob_config_helper.Po
include ./$(DEPDIR)/ob_config_manager.Po
include ./$(DEPDIR)/ob_counter.Po
include ./$(DEPDIR)/ob_crc64.Po
include ./$(DEPDIR)/ob_cur_time.Po
include ./$(DEPDIR)/ob_decimal_helper.Po
include ./$(DEPDIR)/ob_direct_log_reader.Po
include ./$(DEPDIR)/ob_easy_log.Po
include ./$(DEPDIR)/ob_encrypt.Po
include ./$(DEPDIR)/ob_encrypted_helper.Po
include ./$(DEPDIR)/ob_expr_obj.Po
include ./$(DEPDIR)/ob_extra_tables_schema.Po
include ./$(DEPDIR)/ob_fetch_runnable.Po
include ./$(DEPDIR)/ob_file.Po
include ./$(DEPDIR)/ob_file_client.Po
include ./$(DEPDIR)/ob_file_service.Po
include ./$(DEPDIR)/ob_flag.Po
include ./$(DEPDIR)/ob_general_rpc_proxy.Po
include ./$(DEPDIR)/ob_general_rpc_stub.Po
include ./$(DEPDIR)/ob_get_param.Po
include ./$(DEPDIR)/ob_groupby.Po
include ./$(DEPDIR)/ob_groupby_operator.Po
include ./$(DEPDIR)/ob_infix_expression.Po
include ./$(DEPDIR)/ob_inner_table_operator.Po
include ./$(DEPDIR)/ob_iterator_adaptor.Po
include ./$(DEPDIR)/ob_lease_common.Po
include ./$(DEPDIR)/ob_libeasy_statistics.Po
include ./$(DEPDIR)/ob_lighty_queue.Po
include ./$(DEPDIR)/ob_log_cursor.Po
include ./$(DEPDIR)/ob_log_data_writer.Po
include ./$(DEPDIR)/ob_log_dir_scanner.Po
include ./$(DEPDIR)/ob_log_entry.Po
include ./$(DEPDIR)/ob_log_generator.Po
include ./$(DEPDIR)/ob_log_reader.Po
include ./$(DEPDIR)/ob_log_replay_runnable.Po
include ./$(DEPDIR)/ob_log_writer.Po
include ./$(DEPDIR)/ob_log_writer2.Po
include ./$(DEPDIR)/ob_login_mgr.Po
include ./$(DEPDIR)/ob_malloc.Po
include ./$(DEPDIR)/ob_memory_pool.Po
include ./$(DEPDIR)/ob_merger.Po
include ./$(DEPDIR)/ob_meta_cache.Po
include ./$(DEPDIR)/ob_mod_define.Po
include ./$(DEPDIR)/ob_ms_cache_table.Po
include ./$(DEPDIR)/ob_ms_list.Po
include ./$(DEPDIR)/ob_mutator.Po
include ./$(DEPDIR)/ob_mutator_helper.Po
include ./$(DEPDIR)/ob_mutex_task.Po
include ./$(DEPDIR)/ob_nb_accessor.Po
include ./$(DEPDIR)/ob_new_scanner.Po
include ./$(DEPDIR)/ob_new_scanner_helper.Po
include ./$(DEPDIR)/ob_number.Po
include ./$(DEPDIR)/ob_obi_role.Po
include ./$(DEPDIR)/ob_obj_cast.Po
include ./$(DEPDIR)/ob_obj_type.Po
include ./$(DEPDIR)/ob_object.Po
include ./$(DEPDIR)/ob_packet.Po
include ./$(DEPDIR)/ob_packet_queue.Po
include ./$(DEPDIR)/ob_packet_queue_thread.Po
include ./$(DEPDIR)/ob_perm_components.Po
include ./$(DEPDIR)/ob_pool.Po
include ./$(DEPDIR)/ob_postfix_expression.Po
include ./$(DEPDIR)/ob_privilege.Po
include ./$(DEPDIR)/ob_privilege_manager.Po
include ./$(DEPDIR)/ob_privilege_type.Po
include ./$(DEPDIR)/ob_probability_random.Po
include ./$(DEPDIR)/ob_profile_log.Po
include ./$(DEPDIR)/ob_range.Po
include ./$(DEPDIR)/ob_range2.Po
include ./$(DEPDIR)/ob_raw_row.Po
include ./$(DEPDIR)/ob_record_header.Po
include ./$(DEPDIR)/ob_record_header_v2.Po
include ./$(DEPDIR)/ob_regex.Po
include ./$(DEPDIR)/ob_repeated_log_reader.Po
include ./$(DEPDIR)/ob_return_operator.Po
include ./$(DEPDIR)/ob_ring_buffer.Po
include ./$(DEPDIR)/ob_row.Po
include ./$(DEPDIR)/ob_row_compaction.Po
include ./$(DEPDIR)/ob_row_desc.Po
include ./$(DEPDIR)/ob_row_desc_ext.Po
include ./$(DEPDIR)/ob_row_fuse.Po
include ./$(DEPDIR)/ob_row_store.Po
include ./$(DEPDIR)/ob_row_util.Po
include ./$(DEPDIR)/ob_rowkey.Po
include ./$(DEPDIR)/ob_rowkey_helper.Po
include ./$(DEPDIR)/ob_rpc_stub.Po
include ./$(DEPDIR)/ob_rs_ups_message.Po
include ./$(DEPDIR)/ob_scan_param.Po
include ./$(DEPDIR)/ob_scanner.Po
include ./$(DEPDIR)/ob_schema.Po
include ./$(DEPDIR)/ob_schema_helper.Po
include ./$(DEPDIR)/ob_schema_manager.Po
include ./$(DEPDIR)/ob_schema_service.Po
include ./$(DEPDIR)/ob_schema_service_impl.Po
include ./$(DEPDIR)/ob_schema_table.Po
include ./$(DEPDIR)/ob_seq_queue.Po
include ./$(DEPDIR)/ob_server.Po
include ./$(DEPDIR)/ob_server_config.Po
include ./$(DEPDIR)/ob_server_ext.Po
include ./$(DEPDIR)/ob_server_getter.Po
include ./$(DEPDIR)/ob_session_mgr.Po
include ./$(DEPDIR)/ob_shadow_server.Po
include ./$(DEPDIR)/ob_simple_condition.Po
include ./$(DEPDIR)/ob_simple_filter.Po
include ./$(DEPDIR)/ob_single_log_reader.Po
include ./$(DEPDIR)/ob_single_server.Po
include ./$(DEPDIR)/ob_slab.Po
include ./$(DEPDIR)/ob_slave_mgr.Po
include ./$(DEPDIR)/ob_spop_spush_queue.Po
include ./$(DEPDIR)/ob_stack_allocator.Po
include ./$(DEPDIR)/ob_statistics.Po
include ./$(DEPDIR)/ob_string_search.Po
include ./$(DEPDIR)/ob_strings.Po
include ./$(DEPDIR)/ob_system_config.Po
include ./$(DEPDIR)/ob_system_config_key.Po
include ./$(DEPDIR)/ob_table_id_name.Po
include ./$(DEPDIR)/ob_tablet_info.Po
include ./$(DEPDIR)/ob_tablet_location_cache.Po
include ./$(DEPDIR)/ob_tablet_location_cache_proxy.Po
include ./$(DEPDIR)/ob_tablet_location_list.Po
include ./$(DEPDIR)/ob_tablet_location_range_iterator.Po
include ./$(DEPDIR)/ob_tbnet_callback.Po
include ./$(DEPDIR)/ob_tc_malloc.Po
include ./$(DEPDIR)/ob_thread_mempool.Po
include ./$(DEPDIR)/ob_timer.Po
include ./$(DEPDIR)/ob_token.Po
include ./$(DEPDIR)/ob_tp_malloc.Po
include ./$(DEPDIR)/ob_trace_id.Po
include ./$(DEPDIR)/ob_trace_log.Po
include ./$(DEPDIR)/ob_transaction.Po
include ./$(DEPDIR)/ob_trigger_event_util.Po
include ./$(DEPDIR)/ob_trigger_msg.Po
include ./$(DEPDIR)/ob_tsi_block_allocator.Po
include ./$(DEPDIR)/ob_tsi_factory.Po
include ./$(DEPDIR)/ob_ups_info.Po
include ./$(DEPDIR)/ob_ups_row.Po
include ./$(DEPDIR)/ob_ups_row_util.Po
include ./$(DEPDIR)/ob_version.Po
include ./$(DEPDIR)/priority_packet_queue_thread.Po
include ./$(DEPDIR)/thread_buffer.Po
include ./$(DEPDIR)/utility.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

ob_nb_accessor.o: nb_accessor/ob_nb_accessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_nb_accessor.o -MD -MP -MF $(DEPDIR)/ob_nb_accessor.Tpo -c -o ob_nb_accessor.o `test -f 'nb_accessor/ob_nb_accessor.cpp' || echo '$(srcdir)/'`nb_accessor/ob_nb_accessor.cpp
	mv -f $(DEPDIR)/ob_nb_accessor.Tpo $(DEPDIR)/ob_nb_accessor.Po
#	source='nb_accessor/ob_nb_accessor.cpp' object='ob_nb_accessor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_nb_accessor.o `test -f 'nb_accessor/ob_nb_accessor.cpp' || echo '$(srcdir)/'`nb_accessor/ob_nb_accessor.cpp

ob_nb_accessor.obj: nb_accessor/ob_nb_accessor.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_nb_accessor.obj -MD -MP -MF $(DEPDIR)/ob_nb_accessor.Tpo -c -o ob_nb_accessor.obj `if test -f 'nb_accessor/ob_nb_accessor.cpp'; then $(CYGPATH_W) 'nb_accessor/ob_nb_accessor.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/ob_nb_accessor.cpp'; fi`
	mv -f $(DEPDIR)/ob_nb_accessor.Tpo $(DEPDIR)/ob_nb_accessor.Po
#	source='nb_accessor/ob_nb_accessor.cpp' object='ob_nb_accessor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_nb_accessor.obj `if test -f 'nb_accessor/ob_nb_accessor.cpp'; then $(CYGPATH_W) 'nb_accessor/ob_nb_accessor.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/ob_nb_accessor.cpp'; fi`

nb_scan_cond.o: nb_accessor/nb_scan_cond.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_scan_cond.o -MD -MP -MF $(DEPDIR)/nb_scan_cond.Tpo -c -o nb_scan_cond.o `test -f 'nb_accessor/nb_scan_cond.cpp' || echo '$(srcdir)/'`nb_accessor/nb_scan_cond.cpp
	mv -f $(DEPDIR)/nb_scan_cond.Tpo $(DEPDIR)/nb_scan_cond.Po
#	source='nb_accessor/nb_scan_cond.cpp' object='nb_scan_cond.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_scan_cond.o `test -f 'nb_accessor/nb_scan_cond.cpp' || echo '$(srcdir)/'`nb_accessor/nb_scan_cond.cpp

nb_scan_cond.obj: nb_accessor/nb_scan_cond.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_scan_cond.obj -MD -MP -MF $(DEPDIR)/nb_scan_cond.Tpo -c -o nb_scan_cond.obj `if test -f 'nb_accessor/nb_scan_cond.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_scan_cond.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_scan_cond.cpp'; fi`
	mv -f $(DEPDIR)/nb_scan_cond.Tpo $(DEPDIR)/nb_scan_cond.Po
#	source='nb_accessor/nb_scan_cond.cpp' object='nb_scan_cond.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_scan_cond.obj `if test -f 'nb_accessor/nb_scan_cond.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_scan_cond.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_scan_cond.cpp'; fi`

nb_query_res.o: nb_accessor/nb_query_res.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_query_res.o -MD -MP -MF $(DEPDIR)/nb_query_res.Tpo -c -o nb_query_res.o `test -f 'nb_accessor/nb_query_res.cpp' || echo '$(srcdir)/'`nb_accessor/nb_query_res.cpp
	mv -f $(DEPDIR)/nb_query_res.Tpo $(DEPDIR)/nb_query_res.Po
#	source='nb_accessor/nb_query_res.cpp' object='nb_query_res.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_query_res.o `test -f 'nb_accessor/nb_query_res.cpp' || echo '$(srcdir)/'`nb_accessor/nb_query_res.cpp

nb_query_res.obj: nb_accessor/nb_query_res.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_query_res.obj -MD -MP -MF $(DEPDIR)/nb_query_res.Tpo -c -o nb_query_res.obj `if test -f 'nb_accessor/nb_query_res.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_query_res.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_query_res.cpp'; fi`
	mv -f $(DEPDIR)/nb_query_res.Tpo $(DEPDIR)/nb_query_res.Po
#	source='nb_accessor/nb_query_res.cpp' object='nb_query_res.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_query_res.obj `if test -f 'nb_accessor/nb_query_res.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_query_res.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_query_res.cpp'; fi`

nb_table_row.o: nb_accessor/nb_table_row.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_table_row.o -MD -MP -MF $(DEPDIR)/nb_table_row.Tpo -c -o nb_table_row.o `test -f 'nb_accessor/nb_table_row.cpp' || echo '$(srcdir)/'`nb_accessor/nb_table_row.cpp
	mv -f $(DEPDIR)/nb_table_row.Tpo $(DEPDIR)/nb_table_row.Po
#	source='nb_accessor/nb_table_row.cpp' object='nb_table_row.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_table_row.o `test -f 'nb_accessor/nb_table_row.cpp' || echo '$(srcdir)/'`nb_accessor/nb_table_row.cpp

nb_table_row.obj: nb_accessor/nb_table_row.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT nb_table_row.obj -MD -MP -MF $(DEPDIR)/nb_table_row.Tpo -c -o nb_table_row.obj `if test -f 'nb_accessor/nb_table_row.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_table_row.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_table_row.cpp'; fi`
	mv -f $(DEPDIR)/nb_table_row.Tpo $(DEPDIR)/nb_table_row.Po
#	source='nb_accessor/nb_table_row.cpp' object='nb_table_row.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o nb_table_row.obj `if test -f 'nb_accessor/nb_table_row.cpp'; then $(CYGPATH_W) 'nb_accessor/nb_table_row.cpp'; else $(CYGPATH_W) '$(srcdir)/nb_accessor/nb_table_row.cpp'; fi`

ob_ms_cache_table.o: location/ob_ms_cache_table.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_ms_cache_table.o -MD -MP -MF $(DEPDIR)/ob_ms_cache_table.Tpo -c -o ob_ms_cache_table.o `test -f 'location/ob_ms_cache_table.cpp' || echo '$(srcdir)/'`location/ob_ms_cache_table.cpp
	mv -f $(DEPDIR)/ob_ms_cache_table.Tpo $(DEPDIR)/ob_ms_cache_table.Po
#	source='location/ob_ms_cache_table.cpp' object='ob_ms_cache_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_ms_cache_table.o `test -f 'location/ob_ms_cache_table.cpp' || echo '$(srcdir)/'`location/ob_ms_cache_table.cpp

ob_ms_cache_table.obj: location/ob_ms_cache_table.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_ms_cache_table.obj -MD -MP -MF $(DEPDIR)/ob_ms_cache_table.Tpo -c -o ob_ms_cache_table.obj `if test -f 'location/ob_ms_cache_table.cpp'; then $(CYGPATH_W) 'location/ob_ms_cache_table.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_ms_cache_table.cpp'; fi`
	mv -f $(DEPDIR)/ob_ms_cache_table.Tpo $(DEPDIR)/ob_ms_cache_table.Po
#	source='location/ob_ms_cache_table.cpp' object='ob_ms_cache_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_ms_cache_table.obj `if test -f 'location/ob_ms_cache_table.cpp'; then $(CYGPATH_W) 'location/ob_ms_cache_table.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_ms_cache_table.cpp'; fi`

ob_btree_map.o: location/ob_btree_map.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_btree_map.o -MD -MP -MF $(DEPDIR)/ob_btree_map.Tpo -c -o ob_btree_map.o `test -f 'location/ob_btree_map.cpp' || echo '$(srcdir)/'`location/ob_btree_map.cpp
	mv -f $(DEPDIR)/ob_btree_map.Tpo $(DEPDIR)/ob_btree_map.Po
#	source='location/ob_btree_map.cpp' object='ob_btree_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_btree_map.o `test -f 'location/ob_btree_map.cpp' || echo '$(srcdir)/'`location/ob_btree_map.cpp

ob_btree_map.obj: location/ob_btree_map.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_btree_map.obj -MD -MP -MF $(DEPDIR)/ob_btree_map.Tpo -c -o ob_btree_map.obj `if test -f 'location/ob_btree_map.cpp'; then $(CYGPATH_W) 'location/ob_btree_map.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_btree_map.cpp'; fi`
	mv -f $(DEPDIR)/ob_btree_map.Tpo $(DEPDIR)/ob_btree_map.Po
#	source='location/ob_btree_map.cpp' object='ob_btree_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_btree_map.obj `if test -f 'location/ob_btree_map.cpp'; then $(CYGPATH_W) 'location/ob_btree_map.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_btree_map.cpp'; fi`

ob_tablet_location_list.o: location/ob_tablet_location_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_list.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_list.Tpo -c -o ob_tablet_location_list.o `test -f 'location/ob_tablet_location_list.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_list.cpp
	mv -f $(DEPDIR)/ob_tablet_location_list.Tpo $(DEPDIR)/ob_tablet_location_list.Po
#	source='location/ob_tablet_location_list.cpp' object='ob_tablet_location_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_list.o `test -f 'location/ob_tablet_location_list.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_list.cpp

ob_tablet_location_list.obj: location/ob_tablet_location_list.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_list.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_list.Tpo -c -o ob_tablet_location_list.obj `if test -f 'location/ob_tablet_location_list.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_list.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_list.cpp'; fi`
	mv -f $(DEPDIR)/ob_tablet_location_list.Tpo $(DEPDIR)/ob_tablet_location_list.Po
#	source='location/ob_tablet_location_list.cpp' object='ob_tablet_location_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_list.obj `if test -f 'location/ob_tablet_location_list.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_list.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_list.cpp'; fi`

ob_tablet_location_cache_proxy.o: location/ob_tablet_location_cache_proxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache_proxy.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo -c -o ob_tablet_location_cache_proxy.o `test -f 'location/ob_tablet_location_cache_proxy.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache_proxy.cpp
	mv -f $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo $(DEPDIR)/ob_tablet_location_cache_proxy.Po
#	source='location/ob_tablet_location_cache_proxy.cpp' object='ob_tablet_location_cache_proxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache_proxy.o `test -f 'location/ob_tablet_location_cache_proxy.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache_proxy.cpp

ob_tablet_location_cache_proxy.obj: location/ob_tablet_location_cache_proxy.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache_proxy.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo -c -o ob_tablet_location_cache_proxy.obj `if test -f 'location/ob_tablet_location_cache_proxy.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache_proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache_proxy.cpp'; fi`
	mv -f $(DEPDIR)/ob_tablet_location_cache_proxy.Tpo $(DEPDIR)/ob_tablet_location_cache_proxy.Po
#	source='location/ob_tablet_location_cache_proxy.cpp' object='ob_tablet_location_cache_proxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache_proxy.obj `if test -f 'location/ob_tablet_location_cache_proxy.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache_proxy.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache_proxy.cpp'; fi`

ob_tablet_location_range_iterator.o: location/ob_tablet_location_range_iterator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_range_iterator.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_range_iterator.Tpo -c -o ob_tablet_location_range_iterator.o `test -f 'location/ob_tablet_location_range_iterator.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_range_iterator.cpp
	mv -f $(DEPDIR)/ob_tablet_location_range_iterator.Tpo $(DEPDIR)/ob_tablet_location_range_iterator.Po
#	source='location/ob_tablet_location_range_iterator.cpp' object='ob_tablet_location_range_iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_range_iterator.o `test -f 'location/ob_tablet_location_range_iterator.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_range_iterator.cpp

ob_tablet_location_range_iterator.obj: location/ob_tablet_location_range_iterator.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_range_iterator.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_range_iterator.Tpo -c -o ob_tablet_location_range_iterator.obj `if test -f 'location/ob_tablet_location_range_iterator.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_range_iterator.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_range_iterator.cpp'; fi`
	mv -f $(DEPDIR)/ob_tablet_location_range_iterator.Tpo $(DEPDIR)/ob_tablet_location_range_iterator.Po
#	source='location/ob_tablet_location_range_iterator.cpp' object='ob_tablet_location_range_iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_range_iterator.obj `if test -f 'location/ob_tablet_location_range_iterator.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_range_iterator.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_range_iterator.cpp'; fi`

ob_tablet_location_cache.o: location/ob_tablet_location_cache.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache.o -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache.Tpo -c -o ob_tablet_location_cache.o `test -f 'location/ob_tablet_location_cache.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache.cpp
	mv -f $(DEPDIR)/ob_tablet_location_cache.Tpo $(DEPDIR)/ob_tablet_location_cache.Po
#	source='location/ob_tablet_location_cache.cpp' object='ob_tablet_location_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache.o `test -f 'location/ob_tablet_location_cache.cpp' || echo '$(srcdir)/'`location/ob_tablet_location_cache.cpp

ob_tablet_location_cache.obj: location/ob_tablet_location_cache.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ob_tablet_location_cache.obj -MD -MP -MF $(DEPDIR)/ob_tablet_location_cache.Tpo -c -o ob_tablet_location_cache.obj `if test -f 'location/ob_tablet_location_cache.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache.cpp'; fi`
	mv -f $(DEPDIR)/ob_tablet_location_cache.Tpo $(DEPDIR)/ob_tablet_location_cache.Po
#	source='location/ob_tablet_location_cache.cpp' object='ob_tablet_location_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ob_tablet_location_cache.obj `if test -f 'location/ob_tablet_location_cache.cpp'; then $(CYGPATH_W) 'location/ob_tablet_location_cache.cpp'; else $(CYGPATH_W) '$(srcdir)/location/ob_tablet_location_cache.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic clean-libtool clean-local \
	clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am:

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic clean-libtool \
	clean-local clean-noinstLIBRARIES ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am


clean-local:
	-rm -f *.gcov *.gcno *.gcda
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
